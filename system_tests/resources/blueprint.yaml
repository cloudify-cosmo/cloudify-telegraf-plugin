# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_3

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/4.0m1/types.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.4.1/plugin.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - test_plugin.yaml
    - my_types.yaml



node_templates:

  public_ip1:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: external

  public_ip2:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: external

  public_ip3:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: external

  sg_influxdb13:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: influxdb13-security-group
      security_group:
        description: Security group for influxdb component
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 8086
        - remote_ip_prefix: 0.0.0.0/0
          port: 8083
        - remote_ip_prefix: 0.0.0.0/0
          port: 3000

  VM_ubuntu:
    type: cloudify.openstack.nodes.Server
    properties:
      resource_id: monitoring_ubuntu_server
      cloudify_agent:
        user: ubuntu
      server:
        image: 6c3047c6-17b1-4aaf-a657-9229bb481e50
        flavor: c4b193d2-f331-4250-9b15-bbfde97c462a
        userdata: |
          #!/bin/bash
          echo 127.0.1.1 $(cat /etc/hostname) | sudo tee -a sudo /etc/hosts >/dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolvconf/resolv.conf.d/base > /dev/null
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: public_ip1
      - type: my_types.relationships.ConfigureIp
        target: VM_DB
      - type: cloudify.openstack.server_connected_to_security_group
        target: sg_influxdb13
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: telegraf.telegraf_plugin.tasks.install
          inputs:
            telegraf_install_path: /opt/telegraf
            download_url:
            telegraf_config_file:
            telegraf_config_inputs:
              outputs:
                influxdb:
                  urls:
                    - { concat: ['http://', get_attribute: [public_ip3, floating_ip_address], ':8086'] }
                  database: monitoring_telegraf
              inputs:
                mem:
                system:
                io:
                swap:
                cpu:
                  percpu: false
                  totalcpu: true
                  drop:
                    - cpu_time
                disk:
        start:
            implementation: telegraf.telegraf_plugin.tasks.start

  VM_centos:
    type: cloudify.openstack.nodes.Server
    properties:
      resource_id: monitoring_centos_server
      cloudify_agent:
        user: centos
      server:
        image: 74ff4015-aee1-4e02-aaa8-1c77b2650394
        flavor: c4b193d2-f331-4250-9b15-bbfde97c462a
        userdata: |
          #!/bin/bash
          echo 127.0.1.1 $(cat /etc/hostname) | sudo tee -a sudo /etc/hosts >/dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolvconf/resolv.conf.d/base > /dev/null
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: public_ip2
      - type: my_types.relationships.ConfigureIp
        target: VM_DB
      - type: cloudify.openstack.server_connected_to_security_group
        target: sg_influxdb13
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: telegraf.telegraf_plugin.tasks.install
          inputs:
            telegraf_install_path: /opt/telegraf
            download_url:
            telegraf_config_file:
            telegraf_config_inputs:
              outputs:
                influxdb:
                  urls:
                    - { concat: ['http://', get_attribute: [public_ip3, floating_ip_address], ':8086'] }
                  database: monitoring_telegraf
              inputs:
                mem:
                system:
                io:
                swap:
                cpu:
                  percpu: false
                  totalcpu: true
                  drop:
                    - cpu_time
                disk:
        start:
            implementation: telegraf.telegraf_plugin.tasks.start

  VM_DB:
      type: cloudify.openstack.nodes.Server
      properties:
        resource_id: influx_db_server
        cloudify_agent:
          user: ubuntu
        server:
          image: 6c3047c6-17b1-4aaf-a657-9229bb481e50
          flavor: c4b193d2-f331-4250-9b15-bbfde97c462a
          userdata: |
            #!/bin/bash
            echo 127.0.1.1 $(cat /etc/hostname) | sudo tee -a sudo /etc/hosts >/dev/null
            echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolv.conf > /dev/null
            echo "nameserver 8.8.8.8" | sudo tee -a sudo /etc/resolvconf/resolv.conf.d/base > /dev/null
      relationships:
        - type: cloudify.openstack.server_connected_to_floating_ip
          target: public_ip3
        - type: cloudify.openstack.server_connected_to_security_group
          target: sg_influxdb13


  influxdb:
    type: my_types.nodes.InfluxdbNode
    relationships:
      - type: cloudify.relationships.contained_in
        target: VM_DB

outputs:
    ip:
        value: { get_attribute: [public_ip3, floating_ip_address] }