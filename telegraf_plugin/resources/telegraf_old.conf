# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared plugins.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[tags]
        # dc = "us-east-1"

# Configuration for telegraf agent
[agent]
        # Default data collection interval for all plugins
        interval = "10s"

        # If utc = false, uses local time (utc is highly recommended)
        utc = false

        # Precision of writes, valid values are n, u, ms, s, m, and h
        # note: using second precision greatly helps InfluxDB compression
        precision = "s"

        # run telegraf in debug mode
        debug = false

        # Override default hostname, if empty use os.Hostname()
        hostname = ""


###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[outputs]

{% for elem, dict in outputs.iteritems() %}
[outputs.{{ elem }}]
  {% for key, value in dict.iteritems() %}
    {% if value is sameas true %}
      {{ key }} = true
    {% elif value is sameas false %}
      {{ key }} = false
    {% elif value is string %}
      {{ key }} = "{{ value }}"
    {% elif value is number %}
      {{ key }} = {{ value }}
    {% else %}
          {{ key }} = ["{{ '", "'.join(value) }}"]
    {% endif %}
  {% endfor %}
{% endfor %}

###############################################################################
#                                  PLUGINS                                    #
###############################################################################


{% for elem, dict in inputs.iteritems() %}
[{{ elem }}]
  {% if not dict is none %}  
    {% for key, value in dict.iteritems() %}
    {% if value is sameas true %}
      {{ key }} = true
    {% elif value is sameas false %}
      {{ key }} = false
    {% elif value is string %}
      {{ key }} = "{{ value }}"
    {% elif value is number %}
      {{ key }} = {{ value }}
    {% else %}
      {{ key }} = ["{{ '", "'.join(value) }}"]
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}
